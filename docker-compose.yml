version: "3.9"
services:
  index:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    expose:
      - "9200"
    ports:
      - "127.0.0.1:9200:9200"
    container_name: index
    environment:
      - node.name=index
      - cluster.name=digger-index
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - digger-index-data:/usr/share/elasticsearch/data
    deploy:
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: on-failure

  digger:
    # image: ghcr.io/opensanctions/yente:latest
    image: digger-2:latest
    depends_on:
      - index
    ports:
      - "8000:8000"
    environment:
      YENTE_ELASTICSEARCH_URL: http://index:9200
      YENTE_INDEX_CONCURRENCY: 10
      YENTE_QUERY_CONCURRENCY: 20
      YENTE_STATEMENT_API: "false"
      value: "* */12 * * *"
      # Set this to a randomly generated string to enable the /updatez API:
      YENTE_UPDATE_TOKEN: ""
      YENTE_MANIFEST: /manifest/manifest.yml
    # If you want to index data from the host machine as a custom dataset,
    # create a volume mount here to make that data accessible from the 
    # container:
    # volumes:
    #   - "/path/on/the/host/computer:/data"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/healthz" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 3s
    deploy:
      mode: replicated
      # Run multiple instances for better scale:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    volumes:
      - ./manifest.yml:/manifest/manifest.yml
      - ./datasets/:/datasets

volumes:
  digger-index-data: null
